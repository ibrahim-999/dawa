openapi: 3.0.0
info:
  title: 'Integration Swagger in Laravel with Passport Auth Documentation'
  description: 'Implementation of Swagger with in Laravel'
  contact:
    email: admin@admin.com
  license:
    name: 'Apache 2.0'
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8804'
    description: 'Demo API Server'
paths:
  /api/v1/logout:
    post:
      tags:
        - auth
      summary: logout
      operationId: logout
      parameters:
        -
          name: content-type
          in: header
          required: true
          example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
          example: XMLHttpRequest
        -
          name: X-Locale
          in: header
          schema:
            type: en
            enum:
              - en
              - ar
          example: en
      responses:
        200:
          description: 'logout successfully.'
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: 'logout successfully.'
                type: object
        401:
          description: unauthorized.
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: unauthorized
                type: object
      security:
        -
          bearer: []
  /api/v1/register/continue:
    post:
      tags:
        - auth
      summary: 'continue sign up'
      operationId: auth-continue-as-has-experience
      parameters:
        -
          name: content-type
          in: header
          required: true
          example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
          example: XMLHttpRequest
        -
          name: X-Locale
          in: header
          schema:
            type: en
            enum:
              - en
              - ar
          example: en
        -
          name: address
          in: query
          required: true
          schema:
            type: string
        -
          name: latitude
          in: query
          required: true
          schema:
            type: string
          example: '25.123456'
        -
          name: longitude
          in: query
          required: true
          schema:
            type: string
          example: '30.123456'
        -
          name: experience
          in: query
          required: true
          schema:
            type: string
            enum:
              - has_experience
              - student
          example: has_experience
        -
          name: job_title
          in: query
          description: 'required if experience value is has_experience'
          required: true
          schema:
            type: string
          example: developer
        -
          name: company_name
          in: query
          description: 'required if experience value is has_experience'
          required: true
          schema:
            type: string
          example: jobzella
        -
          name: employment_type
          in: query
          description: 'required if experience value is has_experience'
          required: true
          schema:
            type: string
            enum:
              - full-time
              - part-time
              - contract
              - temporary
              - volunteer
              - internship
          example: full_time
        -
          name: start_year
          in: query
          description: 'required if experience value is has_experience'
          required: true
          schema:
            type: string
          example: '2020'
        -
          name: end_year
          in: query
          description: 'required if experience value is has_experience'
          required: false
          schema:
            type: string
          example: '2020'
        -
          name: still_in_role
          in: query
          description: 'required if experience value is has_experience'
          required: true
          schema:
            type: integer
            enum:
              - 1
              - 0
      responses:
        200:
          description: 'completed successfully.'
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: 'created successfully.'
                type: object
        401:
          description: unautourized.
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: unautourized
                type: object
        400:
          description: 'you already registered.'
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: 'you already registered'
                type: object
        422:
          description: 'Validation error.'
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: 'The given data was invalid.'
                  errors:
                    properties:
                      address:
                        type: array
                        items:
                          type: string
                          example: 'The address field is required.'
                      latitude:
                        type: array
                        items:
                          type: string
                          example: 'The latitude field is required.'
                      longitude:
                        type: array
                        items:
                          type: string
                          example: 'The longitude field is required.'
                      experience:
                        type: array
                        items:
                          type: string
                          example: 'The experience field is required.'
                      job_title:
                        type: array
                        items:
                          type: string
                          example: 'The job title field is required.'
                      company_name:
                        type: array
                        items:
                          type: string
                          example: 'The company name field is required.'
                      employment_type:
                        type: array
                        items:
                          type: string
                          example: 'The employment type field is required.'
                      start_year:
                        type: array
                        items:
                          type: string
                          example: 'The start year field is required.'
                      end_year:
                        type: array
                        items:
                          type: string
                          example: 'The end year field is required.'
                      still_in_role:
                        type: array
                        items:
                          type: string
                          example: 'The still in role field is required.'
                    type: object
                type: object
      security:
        -
          bearer: []
  /api/v1/register/continue-as-student:
    post:
      tags:
        - auth
      summary: 'continue sign up will be removed , just For clarification .'
      description: 'Use api/v1/register/continue endpoint , this is just for clarification'
      operationId: auth-continue-as-student
      parameters:
        -
          name: content-type
          in: header
          required: true
          example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
          example: XMLHttpRequest
        -
          name: X-Locale
          in: header
          schema:
            type: en
            enum:
              - en
              - ar
          example: en
        -
          name: address
          in: query
          required: true
          schema:
            type: string
        -
          name: latitude
          in: query
          required: true
          schema:
            type: string
          example: '25.123456'
        -
          name: longitude
          in: query
          required: true
          schema:
            type: string
          example: '30.123456'
        -
          name: experience
          in: query
          required: true
          schema:
            type: string
            enum:
              - has_experience
              - student
          example: student
        -
          name: school
          in: query
          description: 'required if experience value is student'
          required: true
          schema:
            type: string
          example: FCI
        -
          name: degree
          in: query
          description: 'required if experience value is student'
          required: true
          schema:
            type: string
          example: '4'
        -
          name: specialization
          in: query
          description: 'required if experience value is student'
          required: true
          schema:
            type: string
          example: 'computer science'
        -
          name: start_year
          in: query
          description: 'required if experience value is student'
          required: true
          schema:
            type: string
          example: '2020'
        -
          name: end_year
          in: query
          description: 'required if experience value is student'
          required: false
          schema:
            type: string
          example: '2020'
        -
          name: still_studying
          in: query
          description: 'required if experience value is student'
          required: true
          schema:
            type: integer
            enum:
              - 1
              - 0
      responses:
        200:
          description: 'completed successfully.'
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: 'created successfully.'
                type: object
        401:
          description: unautourized.
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: unautourized
                type: object
        400:
          description: 'you already registered.'
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: 'you already registered'
                type: object
        422:
          description: 'Validation error.'
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: 'The given data was invalid.'
                  errors:
                    properties:
                      address:
                        type: array
                        items:
                          type: string
                          example: 'The address field is required.'
                      latitude:
                        type: array
                        items:
                          type: string
                          example: 'The latitude field is required.'
                      longitude:
                        type: array
                        items:
                          type: string
                          example: 'The longitude field is required.'
                      experience:
                        type: array
                        items:
                          type: string
                          example: 'The experience field is required.'
                      school:
                        type: array
                        items:
                          type: string
                          example: 'The school field is required.'
                      degree:
                        type: array
                        items:
                          type: string
                          example: 'The degree field is required.'
                      specialization:
                        type: array
                        items:
                          type: string
                          example: 'The specialization field is required.'
                      start_year:
                        type: array
                        items:
                          type: string
                          example: 'The start year field is required.'
                      end_year:
                        type: array
                        items:
                          type: string
                          example: 'The end year field is required.'
                      still_in_role:
                        type: array
                        items:
                          type: string
                          example: 'The still in role field is required.'
                    type: object
                type: object
      security:
        -
          bearer: []
  /api/v1/forget-password:
    post:
      tags:
        - 'Reset password'
      summary: 'forget password , send code by mail'
      operationId: forget-password
      parameters:
        -
          name: content-type
          in: header
          required: true
          schema:
            type: string
          example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
          example: XMLHttpRequest
        -
          name: X-Locale
          in: header
          schema:
            type: string
            example: en
        -
          name: email
          in: query
          description: 'type : string , (example@example.com)'
          required: true
          schema:
            type: string
          example: example@example.com
      responses:
        201:
          description: 'Successful operation.'
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: 'token is created.'
                type: object
        422:
          description: 'Validation error.'
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: 'The given data was invalid.'
                  errors:
                    properties:
                      email:
                        type: array
                        items:
                          type: string
                          example:
                            - 'The email field is required.'
                    type: object
                type: object
        500:
          description: 'Internal server error.'
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: 'Internal server error.'
                type: object
  /api/v1/reset-password:
    post:
      tags:
        - 'Reset password'
      summary: 'reset password , reset password'
      operationId: reset-password
      parameters:
        -
          name: content-type
          in: header
          required: true
          schema:
            type: string
          example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
          example: XMLHttpRequest
        -
          name: X-Locale
          in: header
          schema:
            type: string
            example: en
        -
          name: email
          in: query
          description: 'type : string , (example@example.com)'
          required: true
          schema:
            type: string
          example: example@example.com
        -
          name: code
          in: query
          description: 'type : string , (1145)'
          required: true
          schema:
            type: string
          example: '1145'
        -
          name: password
          in: query
          description: 'type : string , at least 8 char contain char and number'
          required: true
          schema:
            type: string
          example: password123
        -
          name: password_confirmation
          in: query
          description: 'type : string'
          required: true
          schema:
            type: string
          example: password123
      responses:
        201:
          description: 'Successful operation.'
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: 'password is uodated.'
                type: object
        422:
          description: 'Validation error.'
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: 'The given data was invalid.'
                  errors:
                    properties:
                      email:
                        type: array
                        items:
                          type: string
                          example:
                            - 'The email field is required.'
                      code:
                        type: array
                        items:
                          type: string
                          example:
                            - 'The code field is required.'
                      password:
                        type: array
                        items:
                          type: string
                          example:
                            - 'The password field is required.'
                      password_confirmation:
                        type: array
                        items:
                          type: string
                          example:
                            - 'The password confirmation field is required.'
                    type: object
                type: object
        400:
          description: 'code not found.'
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: 'code is wrong.'
                type: object
        500:
          description: 'Internal server error.'
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: 'Internal server error.'
                type: object
  /api/v1/social/register:
    post:
      tags:
        - auth
      summary: 'register by social network'
      operationId: social-register
      parameters:
        -
          name: content-type
          in: header
          required: true
          example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
          example: XMLHttpRequest
        -
          name: X-Locale
          in: header
          schema:
            type: en
            enum:
              - en
              - ar
          example: en
        -
          name: provider_name
          in: query
          required: true
          schema:
            type: string
            enum:
              - facebook
              - google
              - twitter
              - linkedin
              - apple
        -
          name: provider_id
          in: query
          required: true
          schema:
            type: string
          example: '123456789511'
        -
          name: first_name
          in: query
          required: true
          schema:
            type: string
          example: 'First Name'
        -
          name: last_name
          in: query
          required: true
          schema:
            type: string
          example: 'Last Name'
        -
          name: email
          in: query
          required: true
          schema:
            type: string
          example: example@example.com
        -
          name: data
          in: query
          required: true
          schema:
            type: string
          example:
            first_name: 'first name'
            last_name: 'last name'
            username: 'user name'
            image: 'image url'
            phone_ext: '+20'
            phone: '109465218765'
      responses:
        201:
          description: 'created successfully.'
          content:
            application/json:
              schema:
                properties:
                  access_token:
                    type: string
                    example: 'It contains the access token.'
                  token_type:
                    type: string
                    example: bearer
                  user:
                    properties:
                      id:
                        type: integer
                        example: 'User id.'
                      first_name:
                        type: string
                        example: 'User name.'
                      last_name:
                        type: string
                        example: 'User name.'
                      email:
                        type: string
                        example: 'User email.'
                      is_completed:
                        type: boolean
                        example: 'true'
                      is_verified:
                        type: boolean
                        example: 'false'
                    type: object
                type: object
        422:
          description: 'Validation error.'
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: 'The given data was invalid.'
                  errors:
                    properties:
                      provider_name:
                        type: array
                        items:
                          type: string
                          example: 'The provider name field is required.'
                      provider_id:
                        type: array
                        items:
                          type: string
                          example: 'The provider id field is required.'
                      first_name:
                        type: array
                        items:
                          type: string
                          example: 'The first name field is required.'
                      last_name:
                        type: array
                        items:
                          type: string
                          example: 'The first name field is required.'
                      email:
                        description: 'email, unique'
                        type: array
                        items:
                          type: string
                          example: 'The email is required.'
                      data:
                        description: 'string, Min: 8 characters.'
                        type: array
                        items:
                          type: string
                          example: 'The data is required.'
                    type: object
                type: object
  /api/v1/social/login:
    post:
      tags:
        - auth
      summary: 'Login by social network'
      operationId: social-login
      parameters:
        -
          name: content-type
          in: header
          required: true
          example: application/json
        -
          name: X-Requested-With
          in: header
          required: true
          schema:
            type: string
          example: XMLHttpRequest
        -
          name: X-Locale
          in: header
          schema:
            type: en
            enum:
              - en
              - ar
          example: en
        -
          name: provider_name
          in: query
          required: true
          schema:
            type: string
            enum:
              - facebook
              - google
              - twitter
              - linkedin
              - apple
        -
          name: provider_id
          in: query
          required: true
          schema:
            type: string
          example: '123456789511'
        -
          name: data
          in: query
          required: true
          schema:
            type: string
          example:
            first_name: 'first name'
            last_name: 'last name'
            username: 'user name'
            image: 'image url'
            phone_ext: '+20'
            phone: '109465218765'
      responses:
        200:
          description: 'login successfully.'
          content:
            application/json:
              schema:
                properties:
                  access_token:
                    type: string
                    example: 'It contains the access token.'
                  token_type:
                    type: string
                    example: bearer
                  user:
                    properties:
                      id:
                        type: integer
                        example: 'User id.'
                      first_name:
                        type: string
                        example: 'User name.'
                      last_name:
                        type: string
                        example: 'User name.'
                      email:
                        type: string
                        example: 'User email.'
                      is_completed:
                        type: boolean
                        example: 'true'
                      is_verified:
                        type: boolean
                        example: 'false'
                    type: object
                type: object
        400:
          description: 'complete your sign up form data.'
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: 'complete your sign up form data'
                type: object
        422:
          description: 'Validation error.'
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: 'The given data was invalid.'
                  errors:
                    properties:
                      provider_name:
                        type: array
                        items:
                          type: string
                          example: 'The provider name field is required.'
                      provider_id:
                        type: array
                        items:
                          type: string
                          example: 'The provider id field is required.'
                      data:
                        description: string
                        type: array
                        items:
                          type: string
                          example: 'The data is required.'
                    type: object
                type: object
components:
  securitySchemes:
    bearer:
      type: http
      description: 'Authorization token obtained from logging in.'
      name: Authorization
      in: header
      scheme: bearer
security:
  -
    oauth2_security_example:
      - read
      - write
    passport: []
